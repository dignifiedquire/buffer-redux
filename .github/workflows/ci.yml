name: CI

on:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings


jobs:
  build_and_test_nix:
    name: Build and test (Nix)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [nightly, beta, stable]

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --all --bins --tests

    - name: check nightly
      uses: actions-rs/cargo@v1
      if: matrix.rust == 'nightly'
      with:
        command:  check
        args: --features nightly --all --bins --examples --tests

    - name: check bench
      uses: actions-rs/cargo@v1
      if: matrix.rust == 'nightly'
      with:
        command:  check
        args: --benches

    - name: check no default features
      uses: actions-rs/cargo@v1
      with:
        command:  check
        args: --no-default-features
        
    - name: tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all 

    - name: nightly
      uses: actions-rs/cargo@v1
      if: matrix.rust == 'nightly'
      with:
        command: test
        args: --all  --features nightly

    - name: no default features
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --no-default-features

  build_and_test_windows:
    name: Build and test (Windows)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        rust: [nightly, beta, stable]
        target:
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        override: true

    - uses: msys2/setup-msys2@v2
    - name: check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --all --bins --tests --target ${{ matrix.target }}

    - name: check nightly
      uses: actions-rs/cargo@v1
      if: matrix.rust == 'nightly'
      with:
        command:  check
        args: --features nightly --all --bins --examples --tests --target ${{ matrix.target }}

    - name: check no default features
      uses: actions-rs/cargo@v1
      with:
        command:  check
        override: true
        args: --no-default-features

    - name: check bench
      uses: actions-rs/cargo@v1
      if: matrix.rust == 'nightly'
      with:
        command:  check
        target: ${{ matrix.target }}
        args: --benches

    - name: tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all  --target ${{ matrix.target }}

    - name: nightly
      uses: actions-rs/cargo@v1
      if: matrix.rust == 'nightly'
      with:
        command: test
        args: --all  --features nightly --target ${{ matrix.target }}

  check_fmt_and_docs:
    name: Checking fmt and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

    - name: setup
      run: |
        rustup component add rustfmt
        rustc --version

    - name: fmt
      run: cargo fmt --all -- --check

    - name: Docs
      run: cargo doc

  clippy_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features --all-targets
